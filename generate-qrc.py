#!/usr/bin/env python
# Copyright (C) 2014 Igor Kushnir <igorkuo AT Google mail>
# License: GPL v3+ (http://www.gnu.org/copyleft/gpl.html)
# generate-qrc.py: creates qrc file for icons, which names are specified as
# command line arguments.

import os, sys

if len(sys.argv) < 5:
    sys.exit("""\
Not enough arguments!
First argument must be a relative path to theme directory.
Second argument must be a resulting filename.
Third argument must be a qresource prefix.
Then a nonempty list of icon names, which are to be included in qrc file, must \
follow.
""")

def is_normal(name):
    return name[0] != '.'

path_to_theme = sys.argv[1]
dir_list = os.listdir(path_to_theme)
filename = sys.argv[2]
prefix = sys.argv[3]
icon_names = [name for name in sys.argv[4:] if name]

images = []

def is_valid_icon(f):
    return (f[-1] != '~') and (os.path.splitext(f)[0] in icon_names)

for name in dir_list:
    if is_normal(name):
        for path, dirs, files in os.walk(os.path.join(path_to_theme, name)):
            files = [f for f in files if is_valid_icon(f)]
            dirs[:] = [d for d in dirs if is_normal(d)]
            images += [os.path.join(path, f) for f in files]

index_file = os.path.join(path_to_theme, "index.theme")

header = """\
<!DOCTYPE RCC>
<!-- This file was auto-generated by generate-qrc.py -->
<RCC version="1.0">
    <qresource prefix="%s">
        <file>%s</file>
""" % (prefix, index_file)

trailer = """\
    </qresource>
</RCC>
"""

with open(filename, "w") as f:
    f.write(header)
    for img in images:
        f.write("        <file>%s</file>\n" % img)
    f.write(trailer)
